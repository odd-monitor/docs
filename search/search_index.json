{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Feed Quote Sportive","text":"<p>Questo servizio fornisce un feed di quote per: - Calcio - Basket - Tennis</p> <p>L\u2019architettura prevede: 1. Snapshot iniziale via API REST (eventi, extra, player). 2. Aggiornamenti in tempo reale via RabbitMQ.</p> <p>L\u2019accesso \u00e8 consentito solo da IP in whitelist.</p>"},{"location":"authentication/","title":"Autenticazione &amp; Sicurezza","text":"<ul> <li>L\u2019accesso al servizio \u00e8 basato su whitelist IP.</li> <li>Non \u00e8 richiesta API key o Bearer Token.</li> <li>Le chiamate da IP non autorizzati ricevono <code>403 Forbidden</code>.</li> </ul>"},{"location":"authentication/#rate-limit","title":"Rate Limit","text":"<ul> <li>Lato API REST: 100 richieste/minuto per IP.</li> <li>Lato RabbitMQ: nessun limite, ma \u00e8 raccomandata una sola connessione persistente per cliente.</li> </ul>"},{"location":"examples/","title":"Esempi di utilizzo","text":""},{"location":"examples/#python-client-snapshot","title":"Python Client - Snapshot","text":"<pre><code>import requests\n\nurl = \"https://api.example.com/snapshot/events/soccer/bwin\"\nresp = requests.get(url)\nprint(resp.json())\n</code></pre>"},{"location":"examples/#python-consumer-rabbitmq","title":"Python Consumer - RabbitMQ","text":"<pre><code>import pika, json\n\nconnection = pika.BlockingConnection(pika.ConnectionParameters(\n    host=\"rabbit.example.com\", virtual_host=\"/feed\",\n    credentials=pika.PlainCredentials(\"user\", \"password\")\n))\nchannel = connection.channel()\n\nchannel.exchange_declare(exchange=\"feed.exchange\", exchange_type=\"topic\")\n\nqueue = channel.queue_declare(\"\", exclusive=True).method.queue\nchannel.queue_bind(exchange=\"feed.exchange\", queue=queue, routing_key=\"soccer.event.update\")\n\ndef callback(ch, method, properties, body):\n    data = json.loads(body)\n    print(\"Ricevuto:\", data)\n\nchannel.basic_consume(queue=queue, on_message_callback=callback, auto_ack=True)\nprint(\"In attesa di messaggi...\")\nchannel.start_consuming()\n</code></pre>"},{"location":"getting-started/","title":"Getting Started","text":"<ol> <li>Richiedere l\u2019inserimento del proprio IP in whitelist al supporto tecnico.</li> <li>All\u2019avvio del client:</li> <li>chiamare le API REST per scaricare lo snapshot iniziale</li> <li>collegarsi a RabbitMQ per ricevere gli aggiornamenti in tempo reale</li> </ol>"},{"location":"rabbitmq/","title":"Aggiornamenti via RabbitMQ","text":"<p>Gli aggiornamenti sono inviati tramite RabbitMQ.</p>"},{"location":"rabbitmq/#connessione","title":"Connessione","text":"<ul> <li>Protocollo: AMQP 0.9.1</li> <li>Host: <code>rabbit.example.com</code></li> <li>Porta: <code>5672</code></li> <li>VHost: <code>/feed</code></li> <li>Utente/password: forniti dal supporto</li> </ul>"},{"location":"rabbitmq/#exchange","title":"Exchange","text":"<ul> <li><code>feed.exchange</code> (tipo: <code>topic</code>)</li> </ul>"},{"location":"rabbitmq/#routing-keys","title":"Routing Keys","text":"<ul> <li><code>soccer.event.update</code></li> <li><code>basketball.event.update</code></li> <li><code>tennis.event.update</code></li> <li><code>soccer.player.update</code>, ecc.</li> </ul>"},{"location":"rabbitmq/#formato-messaggi","title":"Formato Messaggi","text":"<p>Esempio JSON:</p> <pre><code>{\n  \"event_id\": \"12345\",\n  \"bookmaker\": \"bwin\",\n  \"market\": \"1x2\",\n  \"odds\": {\n    \"home\": 1.85,\n    \"draw\": 3.20,\n    \"away\": 4.50\n  },\n  \"timestamp\": \"2025-09-05T12:30:00Z\"\n}\n</code></pre>"},{"location":"rest-api/","title":"API REST - Snapshot","text":"<p>Le API REST sono esposte via HTTPS.</p>"},{"location":"rest-api/#endpoint-principale","title":"Endpoint Principale","text":"<pre><code>GET /snapshot/{product}/{sport}/{bookmaker}\n</code></pre>"},{"location":"rest-api/#parametri","title":"Parametri","text":"<ul> <li><code>product</code>: <code>events</code> | <code>extra</code> | <code>player</code></li> <li><code>sport</code>: <code>soccer</code> | <code>basketball</code> | <code>tennis</code></li> <li><code>bookmaker</code>: stringa identificativa del bookmaker</li> </ul>"},{"location":"rest-api/#risposte","title":"Risposte","text":"<ul> <li>200 OK: JSON con snapshot</li> <li>400 Bad Request: parametri invalidi</li> <li>403 Forbidden: IP non autorizzato</li> </ul>"},{"location":"rest-api/#esempio","title":"Esempio","text":"<pre><code>curl https://api.example.com/snapshot/events/soccer/bwin\n</code></pre>"},{"location":"rest-api/#documentazione-interattiva","title":"Documentazione Interattiva","text":"<ul> <li>Swagger UI: https://api.example.com/docs</li> <li>OpenAPI JSON: https://api.example.com/openapi.json</li> </ul>"},{"location":"swagger/","title":"API Reference","text":"<p>Qui sotto \u00e8 inclusa la documentazione Swagger generata da FastAPI:</p> <p></p>"}]}