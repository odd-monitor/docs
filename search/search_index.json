{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sports Odds Feed","text":"<p>This service provides an odds feed for: - Football - Basketball - Tennis</p> <p>The architecture consists of: 1. Initial snapshot via REST API (events, extras, players). 2. Real-time updates via RabbitMQ.  </p> <p>Access is allowed only from whitelisted IPs.  </p>"},{"location":"authentication/","title":"Authentication &amp; Security","text":"<ul> <li>Access to the service is based on an IP whitelist.  </li> <li>No API key or Bearer Token is required.  </li> <li>Requests from unauthorized IPs will receive a <code>403 Forbidden</code> response.  </li> </ul>"},{"location":"authentication/#rate-limiting","title":"Rate Limiting","text":"<ul> <li>REST API: 100 requests per minute per IP.  </li> <li>RabbitMQ: No rate limit, but it is recommended to maintain a single persistent connection per client.  </li> </ul>"},{"location":"examples/","title":"Demo usage","text":""},{"location":"examples/#python-client-snapshot","title":"Python Client - Snapshot","text":"<pre><code>import requests\n\nurl = \"https://api.example.com/events/soccer/bwin\"\nresp = requests.get(url)\nprint(resp.json())\n</code></pre>"},{"location":"examples/#python-consumer-rabbitmq","title":"Python Consumer - RabbitMQ","text":"<pre><code>import pika, json\n\nconnection = pika.BlockingConnection(pika.ConnectionParameters(\n    host=\"rabbit.example.com\", virtual_host=\"/feed\",\n    credentials=pika.PlainCredentials(\"user\", \"password\")\n))\nchannel = connection.channel()\n\nchannel.exchange_declare(exchange=\"feed.exchange\", exchange_type=\"topic\")\n\nqueue = channel.queue_declare(\"\", exclusive=True).method.queue\nchannel.queue_bind(exchange=\"feed.exchange\", queue=queue, routing_key=\"soccer.event.update\")\n\n\ndef callback(ch, method, properties, body):\n    data = json.loads(body)\n    print(\"Ricevuto:\", data)\n\n\nchannel.basic_consume(queue=queue, on_message_callback=callback, auto_ack=True)\nprint(\"In attesa di messaggi...\")\nchannel.start_consuming()\n</code></pre>"},{"location":"getting-started/","title":"Getting Started","text":"<ol> <li>Request to have your IP whitelisted by contacting technical support.  </li> <li>When starting the client:  </li> <li>Call the REST APIs to download the initial snapshot  </li> <li>Connect to RabbitMQ to receive real-time updates  </li> </ol>"},{"location":"rabbitmq/","title":"Updates via RabbitMQ","text":"<p>Updates are delivered through RabbitMQ.</p>"},{"location":"rabbitmq/#connection","title":"Connection","text":"<ul> <li>Protocol: AMQP 0.9.1</li> <li>Host: <code>rabbit.example.com</code></li> <li>Port: <code>5672</code></li> <li>VHost: <code>/</code></li> <li>Username/Password: provided by support</li> </ul>"},{"location":"rabbitmq/#event-exchange","title":"Event Exchange","text":"<ul> <li><code>&lt;client&gt;-event</code> (type: <code>topic</code>)</li> </ul>"},{"location":"rabbitmq/#routing-keys","title":"Routing Keys","text":"<ul> <li><code>event.&lt;bookmakerID&gt;</code></li> </ul>"},{"location":"rabbitmq/#message-format","title":"Message Format","text":"<p>Example JSON: Headers: op: 'U' upsert | 'D' delete</p> <pre><code>{\n  \"_id\": 60941915,\n  \"name\": \"Paris Saint-Germain - Tottenham Hotspur\",\n  \"tournament\": \"UEFA Super Cup\",\n  \"tournamentId\": 465,\n  \"category\": \"International Clubs\",\n  \"categoryId\": 393,\n  \"sport\": \"Soccer\",\n  \"sportId\": 1,\n  \"date\": 1755111600000,\n  \"bookmakers\": {\n    \"1\": {\n      \"eventId\": \"2561\",\n      \"playability\": 1,\n      \"markets\": {\n        \"1\": {\n          \"sign\": {\n            \"1\": {\n              \"outcomePosition\": 1,\n              \"backOdd\": 1.43,\n              \"updt\": 1748914576019\n            },\n            \"2\": {\n              \"outcomePosition\": 2,\n              \"backOdd\": 4.8,\n              \"updt\": 1748914576019\n            },\n            \"3\": {\n              \"outcomePosition\": 3,\n              \"backOdd\": 6.4,\n              \"updt\": 1748914576019\n            }\n          }\n        }\n      }\n    }\n  },\n  \"_expdt\": \"2025-08-13T19:00:00\"\n}\n</code></pre>"},{"location":"rabbitmq/#player-exchange","title":"Player Exchange","text":"<ul> <li><code>&lt;client&gt;-player</code> (type: <code>topic</code>)</li> </ul>"},{"location":"rabbitmq/#routing-keys_1","title":"Routing Keys","text":"<ul> <li><code>player.&lt;sportID&gt;.&lt;bookmakerID&gt;</code></li> </ul>"},{"location":"rabbitmq/#message-format_1","title":"Message Format","text":"<p>Example JSON:</p> <p>Headers: bid: bookmakerID op: 'U' upsert | 'D' delete</p> <p>Message:</p> <pre><code>{\n  \"id\": \"34694653\",\n  \"date\": 1757357100000,\n  \"eventId\": 56418485,\n  \"bookmaker\": 2,\n  \"sportId\": 1,\n  \"players\": {\n    \"7016132\": {\n      \"id\": \"7016132\",\n      \"name\": \"John Souttar\",\n      \"shortName\": \"John Souttar\",\n      \"fullName\": \"John Souttar\",\n      \"markets\": {\n        \"Goalscorers\": {\n          \"#\": {\n            \"1st\": {\n              \"odd\": 110,\n              \"updt\": 1757322314457,\n              \"bSelectionId\": \"7016132\",\n              \"bMarketId\": \"1.247409086\",\n              \"marketTV\": 48,\n              \"runnerTV\": 0\n            }\n          }\n        }\n      },\n      \"team\": null\n    },\n    \"12977768\": {\n      \"id\": \"12977768\",\n      \"name\": \"Scott McTominay\",\n      \"shortName\": \"Scott McTominay\",\n      \"fullName\": \"Scott McTominay\",\n      \"markets\": {\n        \"Goalscorers\": {\n          \"#\": {\n            \"1st\": {\n              \"odd\": 75,\n              \"updt\": 1757322314457,\n              \"bSelectionId\": \"12977768\",\n              \"bMarketId\": \"1.247409086\",\n              \"marketTV\": 48,\n              \"runnerTV\": 43\n            }\n          }\n        }\n      },\n      \"team\": null\n    }\n  }\n}\n</code></pre>"},{"location":"rest-api/","title":"REST API - Snapshot","text":"<p>The REST APIs are exposed over HTTPS.</p>"},{"location":"rest-api/#main-endpoint-for-events","title":"Main Endpoint for Events","text":"<pre><code>GET /event/bookmaker/{bookmaker}\n</code></pre>"},{"location":"rest-api/#parameters","title":"Parameters","text":"<ul> <li><code>bookmaker</code>: string identifier of the bookmaker</li> </ul>"},{"location":"rest-api/#responses","title":"Responses","text":"<ul> <li>200 OK: JSON with snapshot</li> <li>400 Bad Request: invalid parameters</li> <li>403 Forbidden: unauthorized IP</li> </ul> <pre><code>{\n  \"status\": 1,\n  \"data\": [\n    {\n      \"_id\": 61060755,\n      \"date\": 1757854800000,\n      \"name\": \"Atalanta BC - US Lecce\",\n      \"tournamentId\": 23,\n      \"tournament\": \"Serie A\",\n      \"categoryId\": 31,\n      \"category\": \"Italy\",\n      \"sportId\": 1,\n      \"sport\": \"Soccer\",\n      \"bookmakers\": {\n        \"0\": {\n          \"eventId\": \"123123\",\n          \"playability\": 1,\n          \"markets\": {\n            \"1\": {\n              \"sign\": {\n                \"1\": {\n                  \"outcomePosition\": 1,\n                  \"backOdd\": 1.42,\n                  \"updt\": 1757318539218\n                },\n                \"2\": {\n                  \"outcomePosition\": 2,\n                  \"backOdd\": 4.75,\n                  \"updt\": 1757318539218\n                },\n                \"3\": {\n                  \"outcomePosition\": 3,\n                  \"backOdd\": 6.75,\n                  \"updt\": 1757318539218\n                }\n              }\n            },\n            \"2\": {\n              \"sign\": {\n                \"2\": {\n                  \"outcomePosition\": 2,\n                  \"backOdd\": 1.68,\n                  \"updt\": 1757318539218\n                },\n                \"3\": {\n                  \"outcomePosition\": 3,\n                  \"backOdd\": 2.05,\n                  \"updt\": 1757318539218\n                }\n              }\n            },\n            \"9\": {\n              \"sign\": {\n                \"2\": {\n                  \"outcomePosition\": 2,\n                  \"backOdd\": 1.9,\n                  \"updt\": 1757318539218\n                },\n                \"3\": {\n                  \"outcomePosition\": 3,\n                  \"backOdd\": 1.8,\n                  \"updt\": 1757318539218\n                }\n              }\n            },\n            \"11\": {\n              \"sign\": {\n                \"2\": {\n                  \"outcomePosition\": 2,\n                  \"backOdd\": 1.19,\n                  \"updt\": 1757318539218\n                },\n                \"3\": {\n                  \"outcomePosition\": 3,\n                  \"backOdd\": 4.05,\n                  \"updt\": 1757318539218\n                }\n              }\n            },\n            \"12\": {\n              \"sign\": {\n                \"2\": {\n                  \"outcomePosition\": 2,\n                  \"backOdd\": 2.75,\n                  \"updt\": 1757318539218\n                },\n                \"3\": {\n                  \"outcomePosition\": 3,\n                  \"backOdd\": 1.38,\n                  \"updt\": 1757318539218\n                }\n              }\n            },\n            \"13\": {\n              \"sign\": {\n                \"2\": {\n                  \"outcomePosition\": 2,\n                  \"backOdd\": 5.0,\n                  \"updt\": 1757318539218\n                },\n                \"3\": {\n                  \"outcomePosition\": 3,\n                  \"backOdd\": 1.12,\n                  \"updt\": 1757318539218\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"rest-api/#main-endpoint-for-players","title":"Main Endpoint for players","text":"<pre><code>GET /player/{sport}/{bookmaker}\n</code></pre>"},{"location":"rest-api/#parameters_1","title":"Parameters","text":"<ul> <li><code>sport</code>: <code>soccer</code> | <code>basketball</code> | <code>tennis</code></li> <li><code>bookmaker</code>: string identifier of the bookmaker</li> </ul>"},{"location":"rest-api/#parameters_2","title":"Parameters","text":"<ul> <li><code>bookmaker</code>: string identifier of the bookmaker</li> </ul>"},{"location":"rest-api/#responses_1","title":"Responses","text":"<ul> <li>200 OK: JSON with snapshot</li> <li>400 Bad Request: invalid parameters</li> <li>403 Forbidden: unauthorized IP</li> </ul> <pre><code>{\n  \"status\": 1,\n  \"data\": {\n    \"56328439\": {\n      \"id\": 56328439,\n      \"players\": {\n        \"13827311\": {\n          \"id\": \"13827311\",\n          \"betradarId\": null,\n          \"name\": \"Naz Hillmon\",\n          \"shortName\": \"N. Hillmon\",\n          \"fullName\": \"Naz Hillmon\",\n          \"markets\": {\n            \"Points\": {\n              \"10.5\": {\n                \"O\": {\n                  \"odd\": 2.0,\n                  \"updt\": 1757310612739,\n                  \"bSelectionId\": null,\n                  \"bMarketId\": null,\n                  \"marketTV\": null,\n                  \"runnerTV\": null\n                }\n              }\n            }\n          },\n          \"_value\": 1.0,\n          \"team\": \"H\"\n        }\n      }\n    }\n  }\n}\n\n</code></pre>"},{"location":"rest-api/#interactive-documentation","title":"Interactive Documentation","text":"<ul> <li>Swagger UI: https://odd-monitor.github.io/docs/swagger/</li> </ul>"},{"location":"swagger/","title":"API Reference","text":"<p>Qui sotto \u00e8 inclusa la documentazione Swagger generata da FastAPI:</p> <p></p>"}]}